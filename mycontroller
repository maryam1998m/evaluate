using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using RatingSystemKowsar.DataLayer.Entities.IndicatorPro;
using RatingSystemKowsar.Core.Services.Interfaces;
using RatingSystemKowsar.Core.DTOs;
using Microsoft.AspNetCore.Http;

namespace RatingSystemKowsar.Areas.UserPanel.Controllers
{
    [Area("UserPanel")]
    public class EvaluationController : Controller
    {
        private IIndicatorService _indicatorService;
        private IUserService _userService;
        public EvaluationController(IIndicatorService indicatorService, IUserService userService)
        {
            _indicatorService = indicatorService;
            _userService = userService;
        }
        [HttpGet]
        [Route("UserPanel/SelfEvaluate/{roleId}/{userId}")]
        public IActionResult SelfEvaluate(int roleId, int userId)
        {
            int loginUserId = _userService.GetUserIdByUserName(User.Identity.Name);
            bool IsExitForm = _indicatorService.IsExistEvaluateForm(userId, loginUserId);
            EvaluationViewModel indicatorsAndLevels = new EvaluationViewModel();
            if (IsExitForm)
            {
                indicatorsAndLevels= _indicatorService.GetIndicatorAndLevelsByRoleId(roleId);
                return View(indicatorsAndLevels);
            }
            return View(null);
        }
        [HttpPost]
        [Route("UserPanel/SelfEvaluate")]
        public IActionResult SelfEvaluate(EvaluationViewModel evaluation)
        {
            //foreach (string radioName in radio)
            //{
            //    var value = form[radioName];
            //    //blah blah
            //}
            return View();
        }
    }
}
